// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/1111mp/gin-app/ent/accesstoken"
	"github.com/1111mp/gin-app/ent/post"
	"github.com/1111mp/gin-app/ent/schema"
	"github.com/1111mp/gin-app/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accesstokenMixin := schema.AccessToken{}.Mixin()
	accesstokenMixinFields0 := accesstokenMixin[0].Fields()
	_ = accesstokenMixinFields0
	accesstokenFields := schema.AccessToken{}.Fields()
	_ = accesstokenFields
	// accesstokenDescCreateTime is the schema descriptor for create_time field.
	accesstokenDescCreateTime := accesstokenMixinFields0[0].Descriptor()
	// accesstoken.DefaultCreateTime holds the default value on creation for the create_time field.
	accesstoken.DefaultCreateTime = accesstokenDescCreateTime.Default.(func() time.Time)
	// accesstokenDescUpdateTime is the schema descriptor for update_time field.
	accesstokenDescUpdateTime := accesstokenMixinFields0[1].Descriptor()
	// accesstoken.DefaultUpdateTime holds the default value on creation for the update_time field.
	accesstoken.DefaultUpdateTime = accesstokenDescUpdateTime.Default.(func() time.Time)
	// accesstoken.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	accesstoken.UpdateDefaultUpdateTime = accesstokenDescUpdateTime.UpdateDefault.(func() time.Time)
	postMixin := schema.Post{}.Mixin()
	postMixinFields0 := postMixin[0].Fields()
	_ = postMixinFields0
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescCreateTime is the schema descriptor for create_time field.
	postDescCreateTime := postMixinFields0[0].Descriptor()
	// post.DefaultCreateTime holds the default value on creation for the create_time field.
	post.DefaultCreateTime = postDescCreateTime.Default.(func() time.Time)
	// postDescUpdateTime is the schema descriptor for update_time field.
	postDescUpdateTime := postMixinFields0[1].Descriptor()
	// post.DefaultUpdateTime holds the default value on creation for the update_time field.
	post.DefaultUpdateTime = postDescUpdateTime.Default.(func() time.Time)
	// post.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	post.UpdateDefaultUpdateTime = postDescUpdateTime.UpdateDefault.(func() time.Time)
	userMixin := schema.User{}.Mixin()
	userHooks := schema.User{}.Hooks()
	user.Hooks[0] = userHooks[0]
	user.Hooks[1] = userHooks[1]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
}

const (
	Version = "v0.14.5"                                         // Version of ent codegen.
	Sum     = "h1:Rj2WOYJtCkWyFo6a+5wB3EfBRP0rnx1fMk6gGA0UUe4=" // Sum of ent codegen.
)
